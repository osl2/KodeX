<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.kit.scc.git</groupId>
  <artifactId>KodeX</artifactId>
  <version>1.0.1</version>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
          <configuration>
            <argLine>--add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
							--add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.plugininterface=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.pluginutils.model.steps=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.pluginutils.model.content=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.pluginutils.presenter.header=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.pluginutils.presenter.edit=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.pluginutils.presenter.chainlink=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.presenter=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins.colorimageprocedure=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins.colorimageprocedure.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle.model.steps=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.qrcode=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.qrcode.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.bwimageprocedure=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.bwimageprocedure.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.greyscaleimageprocedure=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.greyscaleimageprocedure.presenter=ALL-UNNAMED</argLine>
            <useManifestOnlyJar>false</useManifestOnlyJar>
            <useSystemClassLoader>true</useSystemClassLoader>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.1</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.35</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.4</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.5</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>
      <plugin>
        <groupId>eu.numberfour.maven.plugins</groupId>
        <artifactId>file-list-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <id>create-file-list</id>
            <phase>compile</phase>
            <goals>
              <goal>list</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <baseDir>${basedir}/target/classes/kodex/model/languages</baseDir>
          <outputFile>${basedir}/target/classes/kodex/model/languages/language-files-list.json</outputFile>
          <includes>Languages*.properties</includes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <executions>
          <execution>
            <id>default-test</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <configuration>
          <mainClass>kodex.KodeX/kodex.Main</mainClass>
          <compress>2</compress>
          <noHeaderFiles>true</noHeaderFiles>
          <noManPages>true</noManPages>
          <launcher>launchKodex</launcher>
          <jlinkImageName>kodex</jlinkImageName>
          <jlinkZipName>kodexzip</jlinkZipName>
          <stripDebug>true</stripDebug>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>codestyle/google_checks.xml</configLocation>
          <excludes>**/module-info.java,**/target/**/*</excludes>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <violationSeverity>warning</violationSeverity>
          <failOnViolation>true</failOnViolation>
          <linkXRef>false</linkXRef>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <outputDirectory>target/jacoco-report</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer />
                <transformer>
                  <mainClass>kodex.Main</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <artifactSet>
            <excludes>
              <exclude>module-info.java</exclude>
            </excludes>
          </artifactSet>
          <keepServices>true</keepServices>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-module-infos</id>
            <phase>package</phase>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <configuration>
              <overwriteExistingFiles>true</overwriteExistingFiles>
              <module>
                <moduleInfoFile>src/main/java/module-info.java</moduleInfoFile>
              </module>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.7.0-M1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>apiguardian-api</artifactId>
          <groupId>org.apiguardian</groupId>
        </exclusion>
        <exclusion>
          <artifactId>opentest4j</artifactId>
          <groupId>org.opentest4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>junit-platform-commons</artifactId>
          <groupId>org.junit.platform</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.7.0-M1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit-platform-engine</artifactId>
          <groupId>org.junit.platform</groupId>
        </exclusion>
        <exclusion>
          <artifactId>apiguardian-api</artifactId>
          <groupId>org.apiguardian</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.4.6</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>byte-buddy-agent</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-core</artifactId>
      <version>4.0.16-alpha</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>assertj-core</artifactId>
          <groupId>org.assertj</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit5</artifactId>
      <version>4.0.16-alpha</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-checkstyle-plugin</artifactId>
      <version>3.1.1</version>
      <type>maven-plugin</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-maven-plugin</artifactId>
      <version>0.0.4</version>
      <type>maven-plugin</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-surefire-plugin</artifactId>
      <version>3.0.0-M5</version>
      <type>maven-plugin</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>jacoco-maven-plugin</artifactId>
      <version>0.8.5</version>
      <type>maven-plugin</type>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>codestyle/google_checks.xml</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <properties>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
</project>
